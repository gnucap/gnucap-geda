savant@savant-HP-dv6:~/gnucap/src$ g++ -shared  -fPIC -o lang_gschem.so lang_gschem.cc
savant@savant-HP-dv6:~/gnucap/src$ gnucap
Gnucap 2009.12.07 RCS 26.136
The Gnu Circuit Analysis Package
Never trust any version less than 1.0
Copyright 1982-2009, Albert Davis
Gnucap comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome
to redistribute it under the terms of 
the GNU General Public License, version 3 or later.
See the file "COPYING" for details.
gnucap> load ./lang_gschem.so
gnucap> gschem
gnucap-gschem>C 1 2 3 4 5 as
Got the line
Command parsed
Command Dispatched
Got into parse_module
gnucap-gschem-as>{
gnucap-gschem-as>}
gnucap-gschem>verilog
Got the line
gnucap-gschem>options lang=verilog
Got the line
Command parsed
gnucap-verilog>module net (1,2);
verilog-module>resistor #(.r(5)) res1 (5,6)
verilog-module>endmodule
gnucap-verilog>net net1 (1,2)
gnucap-verilog>list
module  ();
endmodule // 

verilog
module net (1,2);
resistor #(.r(5)) res1 (.p(5),.n(6));
endmodule // net

net #() net1 (.1(1),.2(2));
gnucap-verilog>net #(.r(10)) net1 (1,2)
gnucap-verilog>list
module  ();
endmodule // 

verilog
module net (1,2);
resistor #(.r(5)) res1 (.p(5),.n(6));
endmodule // net

net #() net1 (.1(1),.2(2));
net #(.r(10)) net1 (.1(1),.2(2));
gnucap-verilog>net #(.r(10),.x(5)) net1 (1,2)
gnucap-verilog>list
module  ();
endmodule // 

verilog
module net (1,2);
resistor #(.r(5)) res1 (.p(5),.n(6));
endmodule // net

net #() net1 (.1(1),.2(2));
net #(.r(10)) net1 (.1(1),.2(2));
net #(.r(10),.x(5)) net1 (.1(1),.2(2));
gnucap-verilog>module net (1,2);
verilog-module>capacitor #(.c(5)) cap1 (4,8);
verilog-module>endmodule
gnucap-verilog>list
module  ();
endmodule // 

verilog
module net (1,2);
resistor #(.r(5)) res1 (.p(5),.n(6));
endmodule // net

net #() net1 (.1(1),.2(2));
net #(.r(10)) net1 (.1(1),.2(2));
net #(.r(10),.x(5)) net1 (.1(1),.2(2));
module net (1,2);
capacitor #(.c(5)) cap1 (.p(4),.n(8));
endmodule // net

gnucap-verilog>net net5 (5,7)
gnucap-verilog>list
module  ();
endmodule // 

verilog
module net (1,2);
resistor #(.r(5)) res1 (.p(5),.n(6));
endmodule // net

net #() net1 (.1(1),.2(2));
net #(.r(10)) net1 (.1(1),.2(2));
net #(.r(10),.x(5)) net1 (.1(1),.2(2));
module net (1,2);
capacitor #(.c(5)) cap1 (.p(4),.n(8));
endmodule // net

net #() net5 (.1(5),.2(7));
gnucap-verilog>module resist #(.sf(500)) xys (1,2)
@@#
@@@:lang_verilog.cc:192:parse_ports
module resist #(.sf(500)) xys (1,2)
              ^ ? '(' required
verilog-module>resist #(.sf(500)) xys (1,2)
resist #(.sf(500)) xys (1,2)
^ ? resist: no match
verilog-module>module resist ();
verilog-module>endmodule
verilog-module>list
module resist ();
endmodule // resist

verilog-module>resist #(.sf(500)) xys (1,2)
verilog-module>list
module resist ();
endmodule // resist

gnucap: e_compon.cc:714: const string COMPONENT::port_value(int) const: Assertion `i < net_nodes()' failed.
resist #(.sf(500)) xys (
Aborted (core dumped)
savant@savant-HP-dv6:~/gnucap/src$ 

